# Vi風キーバインドを有効にする
set-window-option -g mode-keys vi

# より直感的なキーバインド
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy'
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'Y' send -X copy-line

# コピーモードでのカーソル移動（Vi風）
bind-key -T copy-mode-vi 'h' send -X cursor-left
bind-key -T copy-mode-vi 'j' send -X cursor-down
bind-key -T copy-mode-vi 'k' send -X cursor-up
bind-key -T copy-mode-vi 'l' send -X cursor-right

# コピーモードでのページ移動
bind-key -T copy-mode-vi 'C-u' send -X halfpage-up
bind-key -T copy-mode-vi 'C-d' send -X halfpage-down
bind-key -T copy-mode-vi 'C-b' send -X page-up
bind-key -T copy-mode-vi 'C-f' send -X page-down

# 単語単位での移動
bind-key -T copy-mode-vi 'w' send -X next-word
bind-key -T copy-mode-vi 'b' send -X previous-word
bind-key -T copy-mode-vi 'e' send -X next-word-end

# 行の先頭・末尾への移動
bind-key -T copy-mode-vi '0' send -X start-of-line
bind-key -T copy-mode-vi '$' send -X end-of-line
bind-key -T copy-mode-vi '^' send -X back-to-indentation

# 検索
bind-key -T copy-mode-vi '/' send -X search-forward
bind-key -T copy-mode-vi '?' send -X search-backward
bind-key -T copy-mode-vi 'n' send -X search-again
bind-key -T copy-mode-vi 'N' send -X search-reverse

# マウス機能を有効にする
set -g mouse on

# マウスでペーン境界をドラッグして調整可能
bind -n MouseDrag1Border resize-pane -M

# マウスでペーンを選択可能
bind -n MouseDown1Pane select-pane -t= \; send-keys -M

# マウスホイールでスクロール
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# ダブルクリックで単語選択
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-word \; run-shell -d0.3 \; send-keys -X copy-pipe-and-cancel 'pbcopy'

# プレフィックスキーをCtrl-aに変更（お好みで）
# set -g prefix C-a
# unbind C-b
# bind C-a send-prefix

# ペーンの分割をより直感的なキーに変更
bind | split-window -h
bind - split-window -v

# ペーン間の移動をVi風に
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペーンのリサイズ
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# ペーンのリサイズをより細かく調整
bind -r C-h resize-pane -L 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-l resize-pane -R 1

# ステータスバーの色設定
set -g status-bg black
set -g status-fg white

# コピーモードでのEscキーでコピーモード終了
bind-key -T copy-mode-vi Escape send -X cancel

# 設定の再読み込みを簡単にする
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# 一度のキーで平等分割（全ペーンを平等配置）
bind = select-layout tiled
bind + select-layout even-horizontal  
bind * select-layout even-vertical
bind t select-layout tiled

# 4分割ショートカット
bind 4 split-window -h \; split-window -v \; select-pane -t 0 \; split-window -v

# 2x2グリッド作成
bind g split-window -h \; split-window -v \; select-pane -t 0 \; split-window -v \; select-layout tiled

# ペーン削除のキーバインド
bind q kill-pane
bind Q confirm-before -p "kill all panes except current? (y/n)" "kill-pane -a" 

# =====================================================
# Kaggle Agent Multi-Agent Development 専用設定
# =====================================================

# Agent間移動ショートカット（Prefix + A/B/C/Mでエージェントエリア移動）
bind M select-pane -t 0  # Boss01
bind A select-pane -t 1  # Worker-A01  
bind B select-pane -t 2  # Worker-B01
bind C select-pane -t 3  # Worker-C01

# エージェント行内移動（1-4で各エージェントの1-4行目）
bind 1 if-shell "tmux display-message -p '#{pane_index}' | grep -E '^[0-3]$'" "select-pane -t %1" "select-pane -t 0"
bind 2 if-shell "tmux display-message -p '#{pane_index}' | grep -E '^[4-7]$'" "select-pane -t %5" "select-pane -t 4"  
bind 3 if-shell "tmux display-message -p '#{pane_index}' | grep -E '^[8-11]$'" "select-pane -t %9" "select-pane -t 8"
bind 4 if-shell "tmux display-message -p '#{pane_index}' | grep -E '^[12-15]$'" "select-pane -t %13" "select-pane -t 12"

# 全Agent同期コマンド実行（危険なので要注意）
bind S set-window-option synchronize-panes

# Agent専用カラーリング
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour39

# ステータスバーでAgent情報表示
set -g status-left-length 50
set -g status-left "#[fg=green]Session: #S #[fg=cyan]| Agent: #{?pane_index,#{?#{<:#{pane_index},4},Boss,#{?#{<:#{pane_index},8},Worker-A,#{?#{<:#{pane_index},12},Worker-B,Worker-C}}},Boss} "

# ペインタイトル表示を有効化
set -g pane-border-status top
set -g pane-border-format "#[fg=cyan]#{pane_title}"

# スクロールバック履歴を増やす
set -g history-limit 10000

# エスケープ時間を短くする（Vimユーザー向け）
set -sg escape-time 0

# ウィンドウ・ペイン番号を1から開始
set -g base-index 1
setw -g pane-base-index 1

# ウィンドウ番号を自動で詰める
set -g renumber-windows on

# アクティビティの監視
setw -g monitor-activity on
set -g visual-activity on

# 256色サポート
set -g default-terminal "screen-256color"

# クリップボード共有（Linux）
if-shell "command -v xclip" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"
if-shell "command -v xsel" "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel --clipboard --input'"

# ペーン同期表示
bind I display-message "Pane Sync: #{?synchronize-panes,ON,OFF}" 